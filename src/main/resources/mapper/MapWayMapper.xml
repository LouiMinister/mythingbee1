<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antybeety.map.way.mybatis.MapWayMapper">

    <resultMap id="node_info" type="com.antybeety.map.way.model.vo.NodeVO">
        <id property="id" column="node_id" jdbcType="INTEGER"/>
        <id property="lat" column="lat" jdbcType="DOUBLE"/>
        <id property="lng" column="lon" jdbcType="DOUBLE"/>
    </resultMap>

    <resultMap id="edge_info" type="com.antybeety.map.way.model.vo.EdgeVO">
        <id property="id" column="edge_id" jdbcType="INTEGER"/>
        <id property="nodeStart" column="node_s" jdbcType="INTEGER"/>
        <id property="nodeEnd" column="node_e" jdbcType="INTEGER"/>
        <id property="address" column="addr" jdbcType="VARCHAR" />
        <id property="safeVal" column="safe_value" jdbcType="INTEGER" />
        <id property="distanceVal" column="dist_value" jdbcType="INTEGER"/>
    </resultMap>

<!--    모든 노드(교차로 + 속도 변화 구간) 정보 가져오기 -->
    <select id="getAllNode" parameterType="hashmap" resultMap="node_info">
        SELECT node_id, lat, lon FROM node_tb
    </select>

<!--    노드 데이터 갖고오기 구현 미완 -->
    <select id="getAllNodeData" parameterType="hashmap" resultMap="node_info">
        SELECT node_id, lat, lon FROM node_tb
    </select>

<!--    간선 정보 가져오기 -->
    <select id="getAllEdge" parameterType="hashmap" resultMap="edge_info">
        SELECT edge_id, node_s, node_e, addr, /*safe_value,*/ dist_value FROM edge_tb
    </select>

<!--    노드 추가-->
    <insert id="addNode" parameterType="hashmap" statementType="PREPARED">
        insert into node_tb (node_id, lat, lon) values(${index}, ${lat}, ${lon})
    </insert>

<!--    간선 추가-->
    <insert id="addEdge"  parameterType="hashmap">
        insert into edge_tb (edge_id, node_s, node_e, dist_value) values(${index}, ${startNode}, ${endNode}, #{distance})
    </insert>

<!--    노드 삭제-->
    <delete id="deleteNode" parameterType="java.lang.Long">
        delete from node_tb where node_id = #{id} ;
    </delete>

<!--    간선 삭제-->
    <delete id="deleteEdge">
        delete from edge_tb where edge_id = #{id} ;
    </delete>


    <select id="searchNodeByArea" parameterType="hashmap" resultMap="node_info">
        select * from node_tb where lat &gt;= ${lat1} AND lat &lt;= ${lat2} AND lon &gt;= ${lng1} AND lon &lt;= ${lng2}
    </select>

    <select id="searchEdgesByArea" parameterType="hashmap" resultMap="edge_info">
        select * from edge_view1 where lat &gt;= ${lat1} AND lat &lt;= ${lat2} AND lon &gt;= ${lng1} AND lon &lt;= ${lng2}
    </select>

    <select id="searchNodeById" parameterType="java.lang.String" resultMap="node_info">
        select * from node_tb where node_id=#{id};
    </select>

    <update id="setSafetyValue" parameterType="hashmap">
        update edge_tb set safe_value = #{safetyValue} where edge_id = #{id};
    </update>

    <update id="addFacility" parameterType="hashmap">
        update ai_data_tb
            <choose>
                <when test="facilityId.equals('CC')">
                    set cctv = 1 where edge_id = #{edgeId};
                </when>
                <when test="facilityId.equals('PI')">
                    set police = 1 where edge_id = #{edgeId};
                </when>
                <when test="facilityId.equals('LL')">
                    set convenience = 1 where edge_id = #{edgeId};
                </when>
                <when test="facilityId.equals('OO')">
                    set road = 1 where edge_id = #{edgeId};
                </when>
                <when test="facilityId.equals('OO')">
                    set light = light+1 where edge_id = #{edgeId};
                </when>


            </choose>
    </update>

    <select id="searchEdgeById" parameterType="java.lang.String" resultMap="edge_info">
        select * from edge_tb where edge_id=#{id};
    </select>

    <select id="getNode" parameterType="java.lang.Long" resultMap="node_info">
        select node_id, lat, lon from node_tb where node_id = #{id};
    </select>

    <select id="searchAllRoad" resultType="com.antybeety.map.way.model.vo.RoadVO">
        select road_name, road_length from road_tb;
    </select>

    <update id="setHeuristic" parameterType="hashmap">
        update heuristic_tb set safe_value = ${heuristic} where node_s = #{startNodeId} and node_e = #{endNodeId}
    </update>

</mapper>